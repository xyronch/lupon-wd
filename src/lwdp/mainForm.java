/*
 * Programmer: Real Bert Magallanes
 * Email Address: realbertmagallanes@gmail.com
 */
package lwdp;

/**
 *
 * @author Real Bert Magallanes
 */
//import java.awt.*;
import java.awt.Color;
import java.awt.DisplayMode;
import java.awt.Graphics;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.sql.*;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

public class mainForm extends javax.swing.JFrame {
    accountNoPattern cc = new accountNoPattern(); 
    public String pathLoc = "";
    private String cStatus = "0";
    /**
     * Creates new form mainForm
     */
    
    
    public mainForm() {
        initComponents();
        
        setAccountNo();
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        billingConcessionairesTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        mainConcessionairesBtn = new javax.swing.JButton();
        mainUserBtnTop = new javax.swing.JButton();
        mainPaymentBtnTop = new javax.swing.JButton();
        mainBillingBtnTop = new javax.swing.JButton();
        mainLockBtnTop = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jLabel67 = new javax.swing.JLabel();
        statusBarUID = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jLabel69 = new javax.swing.JLabel();
        statusBarName = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jScrollPane4 = new javax.swing.JScrollPane();
        desktopPane = new javax.swing.JDesktopPane();
        conPane = new javax.swing.JInternalFrame();
        jToolBar3 = new javax.swing.JToolBar();
        jLabel31 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        topBarZone = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        topBarBookNo = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        topBarClassification = new javax.swing.JComboBox<>();
        jLabel44 = new javax.swing.JLabel();
        topBarSize = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel45 = new javax.swing.JLabel();
        topBarConnectionStatus = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        topBarSearchField = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane9 = new javax.swing.JTabbedPane();
        jPanel55 = new javax.swing.JPanel();
        jLabel124 = new javax.swing.JLabel();
        accountNoJLabel = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        gdField = new javax.swing.JTextField();
        jLabel119 = new javax.swing.JLabel();
        mdField = new javax.swing.JTextField();
        jLabel126 = new javax.swing.JLabel();
        zoneBox = new javax.swing.JComboBox<>();
        jLabel128 = new javax.swing.JLabel();
        classificationBox = new javax.swing.JComboBox<>();
        sizeBox = new javax.swing.JComboBox<>();
        jLabel129 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        addressField = new javax.swing.JTextField();
        jLabel122 = new javax.swing.JLabel();
        jTextField109 = new javax.swing.JTextField();
        jLabel121 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        meterField = new javax.swing.JTextField();
        jLabel116 = new javax.swing.JLabel();
        acnField = new javax.swing.JLabel();
        connectionStatusField = new javax.swing.JCheckBox();
        meterSaveBtn = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel7 = new javax.swing.JPanel();
        ConsumersDepositPanel = new javax.swing.JPanel();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        editGuaranteeField = new javax.swing.JTextField();
        editMeterField = new javax.swing.JTextField();
        jLabel133 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        editAccountNoLabel = new javax.swing.JLabel();
        editConcessionaireField = new javax.swing.JTextField();
        editConcessionaireBtn = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        editAddressField = new javax.swing.JTextField();
        editMeterNoField = new javax.swing.JTextField();
        jLabel139 = new javax.swing.JLabel();
        editConnectedRadio = new javax.swing.JRadioButton();
        editDisconnectedRadio = new javax.swing.JRadioButton();
        editMeterBtn = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JSeparator();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        concessionairesJTable = new javax.swing.JTable();
        billPane = new javax.swing.JInternalFrame();
        mainBilllingScrollPane = new javax.swing.JScrollPane();
        mainBillingPane = new javax.swing.JPanel();
        billing_left_pane = new javax.swing.JPanel();
        billingAccountNoField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        billingConcessionairesField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        billingAddressField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        billingZoneLabel = new javax.swing.JLabel();
        billingSizeLabel = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        billingSearchBtn = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        billingMeterNoLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        billingClassificationLabel = new javax.swing.JLabel();
        billing_right_pane = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        billingToLabel = new javax.swing.JLabel();
        billingFromLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        billingPrevField = new javax.swing.JTextField();
        billingMeteredSalesField = new javax.swing.JTextField();
        billingCuField = new javax.swing.JTextField();
        billingPresentField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        billingPenaltyField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        billingReadingClear = new javax.swing.JButton();
        billingSaveBtn = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        billingReadingID = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        billingMeterMaintenanceChargeField = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        billingBillNo = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        billingPrevFrom = new javax.swing.JLabel();
        billingPrevTo = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        billingPrevPresent = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        billingPrevPrevious = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        billingPrevCumc = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        billingPrevWS = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        billingPrevPenalty = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        billingPrevMeterMentenance = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        billingConcessionairesTable = new javax.swing.JTable();
        payPane = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        payment_main_panel = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        paymentAcnField = new javax.swing.JTextField();
        paymentConcessionaireField = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        paymentAddressField = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        paymentMeterNOLabelField = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        paymentCurrentPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        paymentCurrentTable = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        paymentCurrentMonth = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        paymentCurrentPresent = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        paymentCurrentPrevious = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        paymentCurrentCubic = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        paymentCurrentSubTotal = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        paymentBillNoLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        paymentDate = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        paymentPreviousPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        paymentCurrentTable1 = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        paymentPreviousSubTotal = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        paymentCashField = new javax.swing.JTextField();
        paymentTotalLabel = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        paymentORNOLabel = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        userPane = new javax.swing.JInternalFrame();
        jLabel123 = new javax.swing.JLabel();
        UFname = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        UFuserID = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        UFusername = new javax.swing.JLabel();
        UFstatus = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        UFpassword = new javax.swing.JLabel();
        PositionTitle = new javax.swing.JLabel();
        UFtask = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuPrint = new javax.swing.JMenuItem();
        menuPrintPreview = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();

        billingConcessionairesTable1.setBorder(new javax.swing.border.MatteBorder(null));
        billingConcessionairesTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        billingConcessionairesTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        billingConcessionairesTable1.setSelectionBackground(new java.awt.Color(0, 102, 51));
        billingConcessionairesTable1.setUpdateSelectionOnSort(false);
        billingConcessionairesTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billingConcessionairesTableMouseClicked(evt);
            }
        });
        billingConcessionairesTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                billingConcessionairesTableKeyPressed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Lupon Water District");
        setExtendedState(MAXIMIZED_BOTH);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1158, 768));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("mainFrame"); // NOI18N
        setSize(new java.awt.Dimension(1160, 768));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1370, 50));
        jPanel1.setMinimumSize(new java.awt.Dimension(566, 50));
        jPanel1.setName("top-panel"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("User");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Payment");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Billing");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Lock");

        jLabel115.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel115.setText("Concessionaires");

        mainConcessionairesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/customer-icon.png"))); // NOI18N
        mainConcessionairesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainConcessionairesBtnActionPerformed(evt);
            }
        });

        mainUserBtnTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/user-icon.png"))); // NOI18N
        mainUserBtnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainUserBtnTopActionPerformed(evt);
            }
        });

        mainPaymentBtnTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/payment-icon.png"))); // NOI18N
        mainPaymentBtnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainPaymentBtnTopActionPerformed(evt);
            }
        });

        mainBillingBtnTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/bill-icon.png"))); // NOI18N
        mainBillingBtnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainBillingBtnTopActionPerformed(evt);
            }
        });

        mainLockBtnTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/lock-icon.png"))); // NOI18N
        mainLockBtnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainLockBtnTopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mainConcessionairesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainUserBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel115)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(mainPaymentBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mainBillingBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 550, Short.MAX_VALUE)
                        .addComponent(mainLockBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(49, 49, 49))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainConcessionairesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainUserBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainPaymentBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainBillingBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainLockBtnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jToolBar2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar2.setFloatable(false);

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel67.setText("User ID: ");
        jToolBar2.add(jLabel67);

        statusBarUID.setText("0");
        jToolBar2.add(statusBarUID);
        jToolBar2.add(jSeparator7);

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel69.setText("Name:  ");
        jToolBar2.add(jLabel69);

        statusBarName.setText("xxxxxxxxxxx");
        jToolBar2.add(statusBarName);
        jToolBar2.add(jSeparator8);

        desktopPane.setMaximumSize(new java.awt.Dimension(1366, 768));
        desktopPane.setMinimumSize(new java.awt.Dimension(800, 600));

        conPane.setTitle("Concessionaries");
        conPane.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/customer-icon.png"))); // NOI18N
        try {
            conPane.setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        conPane.setVisible(false);
        conPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                conPaneMouseMoved(evt);
            }
        });

        jToolBar3.setFloatable(false);

        jLabel31.setText("SORT BY:");
        jToolBar3.add(jLabel31);

        jLabel41.setText("Zone No:");
        jToolBar3.add(jLabel41);

        topBarZone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "01", "02", "03", "04", "05", "06", "07" }));
        topBarZone.setMinimumSize(new java.awt.Dimension(56, 5));
        topBarZone.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                topBarZoneItemStateChanged(evt);
            }
        });
        jToolBar3.add(topBarZone);

        jLabel1.setText("Book No:");
        jToolBar3.add(jLabel1);

        topBarBookNo.setText("1");
        topBarBookNo.setPreferredSize(new java.awt.Dimension(80, 25));
        topBarBookNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                topBarBookNoFocusLost(evt);
            }
        });
        jToolBar3.add(topBarBookNo);

        jLabel43.setText("    Classification:");
        jToolBar3.add(jLabel43);

        topBarClassification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "RESIDENTIAL", "GOVERNMENT", "COMMERCIAL", "COMMERCIAL A", "COMMERCIAL B", "COMMERCIAL C", "B ULK" }));
        topBarClassification.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                topBarClassificationItemStateChanged(evt);
            }
        });
        jToolBar3.add(topBarClassification);

        jLabel44.setText("      Meter Size:");
        jToolBar3.add(jLabel44);

        topBarSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "1/2", "3/4", "1\"" }));
        topBarSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                topBarSizeItemStateChanged(evt);
            }
        });
        jToolBar3.add(topBarSize);
        jToolBar3.add(jSeparator1);

        jLabel45.setText("Connection Status:");
        jToolBar3.add(jLabel45);

        topBarConnectionStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Connected", "Disconnected", "Not Installed" }));
        topBarConnectionStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                topBarConnectionStatusItemStateChanged(evt);
            }
        });
        jToolBar3.add(topBarConnectionStatus);

        jLabel46.setText("  SEARCH:");
        jToolBar3.add(jLabel46);

        topBarSearchField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        topBarSearchField.setPreferredSize(new java.awt.Dimension(220, 30));
        topBarSearchField.setSelectionColor(new java.awt.Color(204, 0, 0));
        jToolBar3.add(topBarSearchField);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTabbedPane9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane9MouseClicked(evt);
            }
        });

        jLabel124.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel124.setText("Account No:");

        accountNoJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        accountNoJLabel.setForeground(new java.awt.Color(0, 0, 255));
        accountNoJLabel.setText("041-11-001");

        jLabel117.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel117.setText("NAME:");

        nameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel118.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel118.setText("Guarantee Deposit:");

        gdField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gdField.setText("0");

        jLabel119.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel119.setText("Meter Deposit:");

        mdField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mdField.setText("0");

        jLabel126.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel126.setText("Zone No:");

        zoneBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zoneBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07" }));
        zoneBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                zoneBoxItemStateChanged(evt);
            }
        });

        jLabel128.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel128.setText("Classification:");

        classificationBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        classificationBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RESIDENTIAL", "GOVERNMENT", "COMMERCIAL", "COMMERCIAL A", "COMMERCIAL B", "COMMERCIAL C", "BULK", "RESIDENTIAL SEWER", "COMM'L/IND'L SEWER", " " }));
        classificationBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classificationBoxItemStateChanged(evt);
            }
        });

        sizeBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sizeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3/8", "1/2", "3/4", "1\"", "1\"-1/4", "1\"-1/2", "2\"", "2\"-1/2", "3\"" }));
        sizeBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sizeBoxItemStateChanged(evt);
            }
        });

        jLabel129.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel129.setText("Meter Size::");

        jButton22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton22.setText("SAVE");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel55Layout = new javax.swing.GroupLayout(jPanel55);
        jPanel55.setLayout(jPanel55Layout);
        jPanel55Layout.setHorizontalGroup(
            jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel55Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel126)
                    .addComponent(jLabel117)
                    .addComponent(jLabel124))
                .addGap(18, 18, 18)
                .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel55Layout.createSequentialGroup()
                        .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountNoJLabel))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel118)
                            .addComponent(jLabel119))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mdField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gdField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel55Layout.createSequentialGroup()
                        .addComponent(zoneBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel128)
                        .addGap(18, 18, 18)
                        .addComponent(classificationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel129)
                        .addGap(18, 18, 18)
                        .addComponent(sizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(384, Short.MAX_VALUE))
            .addComponent(jSeparator12, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel55Layout.setVerticalGroup(
            jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel55Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel124)
                    .addComponent(accountNoJLabel)
                    .addComponent(jLabel119)
                    .addComponent(mdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel117)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel118)
                    .addComponent(gdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel126)
                    .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zoneBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel128)
                        .addComponent(classificationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel129)
                        .addComponent(sizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );

        jTabbedPane9.addTab("NEW APPLICANTS", jPanel55);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SEARCH", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel27.setText("Account No:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel29.setText("Concessionaires:");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel29))
                        .addGap(0, 262, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel5);

        addressField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel122.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel122.setText("Address:");

        jTextField109.setEditable(false);
        jTextField109.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel121.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel121.setText("Owner:");

        jLabel120.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel120.setText("Meter No:");

        meterField.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        meterField.setText("0");

        jLabel116.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel116.setText("Account No");

        acnField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        acnField.setForeground(new java.awt.Color(51, 51, 255));
        acnField.setText("000-00-000");

        connectionStatusField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        connectionStatusField.setText("Connected");

        meterSaveBtn.setBackground(new java.awt.Color(204, 204, 255));
        meterSaveBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        meterSaveBtn.setText("SAVE");
        meterSaveBtn.setEnabled(false);
        meterSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meterSaveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel120)
                                .addGap(18, 18, 18)
                                .addComponent(meterField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 182, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(jLabel121)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(connectionStatusField)
                                        .addGap(77, 77, 77)
                                        .addComponent(jLabel116))
                                    .addComponent(jTextField109, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel122)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(acnField)
                        .addGap(82, 82, 82)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(meterSaveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jSeparator9)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(meterSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel120)
                            .addComponent(meterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel121)
                            .addComponent(jTextField109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel122)
                            .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel116)
                            .addComponent(connectionStatusField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acnField)))
                .addGap(19, 19, 19)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1))
        );

        jTabbedPane9.addTab("METER DETAILS", jPanel2);

        jSplitPane2.setDividerLocation(550);
        jSplitPane2.setDividerSize(6);

        jPanel7.setPreferredSize(new java.awt.Dimension(403, 900));

        ConsumersDepositPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consumers Deposit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51)))); // NOI18N

        jLabel134.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel134.setText("Guarantee:");

        jLabel135.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel135.setText("Meter:");

        editGuaranteeField.setEditable(false);
        editGuaranteeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        editMeterField.setEditable(false);
        editMeterField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout ConsumersDepositPanelLayout = new javax.swing.GroupLayout(ConsumersDepositPanel);
        ConsumersDepositPanel.setLayout(ConsumersDepositPanelLayout);
        ConsumersDepositPanelLayout.setHorizontalGroup(
            ConsumersDepositPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsumersDepositPanelLayout.createSequentialGroup()
                .addGroup(ConsumersDepositPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConsumersDepositPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel135)
                        .addGap(18, 18, 18)
                        .addComponent(editMeterField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConsumersDepositPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel134)
                        .addGap(18, 18, 18)
                        .addComponent(editGuaranteeField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ConsumersDepositPanelLayout.setVerticalGroup(
            ConsumersDepositPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsumersDepositPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConsumersDepositPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel134)
                    .addComponent(editGuaranteeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ConsumersDepositPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel135)
                    .addComponent(editMeterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel133.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel133.setText("Concessionaire");

        jLabel132.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel132.setText("Account No:");

        editAccountNoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editAccountNoLabel.setForeground(new java.awt.Color(51, 0, 204));
        editAccountNoLabel.setText("000-00-000");

        editConcessionaireField.setEditable(false);
        editConcessionaireField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        editConcessionaireBtn.setBackground(new java.awt.Color(0, 0, 255));
        editConcessionaireBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        editConcessionaireBtn.setForeground(new java.awt.Color(255, 255, 255));
        editConcessionaireBtn.setText("EDIT");
        editConcessionaireBtn.setEnabled(false);
        editConcessionaireBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editConcessionaireBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel133)
                        .addGap(18, 18, 18)
                        .addComponent(editConcessionaireField))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel132)
                        .addGap(30, 30, 30)
                        .addComponent(editAccountNoLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(ConsumersDepositPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addComponent(editConcessionaireBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jSeparator11)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel132)
                    .addComponent(editAccountNoLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel133)
                    .addComponent(editConcessionaireField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editConcessionaireBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConsumersDepositPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(jPanel7);

        jLabel137.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel137.setText("Meter No:");

        jLabel138.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel138.setText("Address:");

        editAddressField.setEditable(false);
        editAddressField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        editMeterNoField.setEditable(false);
        editMeterNoField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel139.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel139.setText("Connection Status:");

        editConnectedRadio.setText("Connect");
        editConnectedRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editConnectedRadioMouseClicked(evt);
            }
        });

        editDisconnectedRadio.setText("Disconnect");
        editDisconnectedRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editDisconnectedRadioMouseClicked(evt);
            }
        });

        editMeterBtn.setBackground(new java.awt.Color(0, 0, 255));
        editMeterBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        editMeterBtn.setForeground(new java.awt.Color(255, 255, 255));
        editMeterBtn.setText("Edit");
        editMeterBtn.setEnabled(false);
        editMeterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMeterBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel139)
                    .addComponent(jLabel137)
                    .addComponent(jLabel138))
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editMeterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(editConnectedRadio)
                        .addGap(42, 42, 42)
                        .addComponent(editDisconnectedRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editMeterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel137)
                    .addComponent(editMeterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel138)
                    .addComponent(editAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel139)
                        .addComponent(editConnectedRadio)
                        .addComponent(editDisconnectedRadio))
                    .addComponent(editMeterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel8);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1176, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
        );

        jTabbedPane9.addTab("EDIT TAB", jPanel6);

        jPanel12.setBackground(new java.awt.Color(0, 0, 0));
        jPanel12.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        concessionairesJTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        concessionairesJTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        concessionairesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        concessionairesJTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        concessionairesJTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        concessionairesJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                concessionairesJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(concessionairesJTable);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane9)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel3);

        javax.swing.GroupLayout conPaneLayout = new javax.swing.GroupLayout(conPane.getContentPane());
        conPane.getContentPane().setLayout(conPaneLayout);
        conPaneLayout.setHorizontalGroup(
            conPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE)
        );
        conPaneLayout.setVerticalGroup(
            conPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conPaneLayout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
        );

        desktopPane.add(conPane);
        conPane.setBounds(0, 0, 1150, 640);
        try {
            conPane.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        billPane.setTitle("Billing");
        billPane.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/bill-icon.png"))); // NOI18N
        billPane.setVisible(false);
        billPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                billPaneMouseMoved(evt);
            }
        });

        mainBillingPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        billing_left_pane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        billingAccountNoField.setFocusable(false);
        billingAccountNoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                billingAccountNoFieldFocusGained(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Account No:");

        billingConcessionairesField.setFocusable(false);
        billingConcessionairesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                billingConcessionairesFieldFocusGained(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Concessionaires:");

        billingAddressField.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Address:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Zone No:");

        billingZoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        billingZoneLabel.setText("NONE");

        billingSizeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        billingSizeLabel.setText("NONE");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel66.setText("Size:");

        billingSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/search-icon.png"))); // NOI18N
        billingSearchBtn.setText("Search");
        billingSearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billingSearchBtnMouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Meter No:");

        billingMeterNoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        billingMeterNoLabel.setText("NONE");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Classification:");

        billingClassificationLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        billingClassificationLabel.setText("NONE");

        javax.swing.GroupLayout billing_left_paneLayout = new javax.swing.GroupLayout(billing_left_pane);
        billing_left_pane.setLayout(billing_left_paneLayout);
        billing_left_paneLayout.setHorizontalGroup(
            billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billing_left_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(billing_left_paneLayout.createSequentialGroup()
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(21, 21, 21)
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(billingAddressField)
                            .addComponent(billingConcessionairesField)
                            .addGroup(billing_left_paneLayout.createSequentialGroup()
                                .addComponent(billingAccountNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 138, Short.MAX_VALUE))))
                    .addGroup(billing_left_paneLayout.createSequentialGroup()
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(billing_left_paneLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(billing_left_paneLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(billingMeterNoLabel))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(billing_left_paneLayout.createSequentialGroup()
                                            .addComponent(jLabel22)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(billingClassificationLabel))
                                        .addGroup(billing_left_paneLayout.createSequentialGroup()
                                            .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel15)
                                                .addComponent(jLabel66))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(billingSizeLabel)
                                                .addComponent(billingZoneLabel))))))
                            .addComponent(billingSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        billing_left_paneLayout.setVerticalGroup(
            billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billing_left_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(billingAccountNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(billingConcessionairesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(billingAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(billing_left_paneLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(billingZoneLabel)))
                    .addGroup(billing_left_paneLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(billingSizeLabel))
                        .addGap(5, 5, 5)
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(billingClassificationLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(billing_left_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(billingMeterNoLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(billingSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setText("From:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel19.setText("To:");

        billingToLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingToLabel.setText("00/00/00");

        billingFromLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingFromLabel.setText("00/00/00");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setText("Previous:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel8.setText("Present:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setText("Cu.m Consumed:");

        billingPrevField.setEditable(false);
        billingPrevField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevField.setText("0");

        billingMeteredSalesField.setEditable(false);
        billingMeteredSalesField.setBackground(new java.awt.Color(255, 255, 255));
        billingMeteredSalesField.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        billingMeteredSalesField.setText("0");

        billingCuField.setEditable(false);
        billingCuField.setBackground(new java.awt.Color(255, 255, 255));
        billingCuField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingCuField.setText("0");

        billingPresentField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPresentField.setText("0");
        billingPresentField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                billingPresentFieldFocusGained(evt);
            }
        });
        billingPresentField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                billingPresentFieldKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setText("Water Sales:");

        billingPenaltyField.setEditable(false);
        billingPenaltyField.setBackground(new java.awt.Color(255, 255, 255));
        billingPenaltyField.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        billingPenaltyField.setText("0");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel11.setText("Penalty:");

        billingReadingClear.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        billingReadingClear.setForeground(new java.awt.Color(255, 0, 0));
        billingReadingClear.setText("C");
        billingReadingClear.setToolTipText("Clear The Present TextField");
        billingReadingClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingReadingClearActionPerformed(evt);
            }
        });

        billingSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingSaveBtn.setText("Save");
        billingSaveBtn.setEnabled(false);
        billingSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingSaveBtnActionPerformed(evt);
            }
        });

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        billingReadingID.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingReadingID.setText("0");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel18.setText("Reading ID:");

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        billingMeterMaintenanceChargeField.setEditable(false);
        billingMeterMaintenanceChargeField.setBackground(new java.awt.Color(255, 255, 255));
        billingMeterMaintenanceChargeField.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        billingMeterMaintenanceChargeField.setText("15");

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel70.setText("Meter Maintenance Charge:");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel48.setText("Bill No:");

        billingBillNo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        billingBillNo.setForeground(new java.awt.Color(255, 0, 0));
        billingBillNo.setText("00001");

        jLabel59.setText("Installation Fee:");

        jLabel64.setText("Materials:");

        jLabel71.setText("Reconnection Fee:");

        jLabel72.setText("Service Fee:");

        jLabel73.setText("Transfer Fee:");

        jTextField3.setText("0");

        jTextField4.setText("0");

        jTextField5.setText("0");

        jTextField6.setText("0");

        jTextField7.setText("0");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billingCuField))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billingPenaltyField))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billingFromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billingToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billingReadingID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel48)
                        .addGap(18, 18, 18)
                        .addComponent(billingBillNo))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(billingPrevField))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(billingPresentField))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billingMeteredSalesField))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addGap(18, 18, 18)
                        .addComponent(billingMeterMaintenanceChargeField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(billingReadingClear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(billingSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel71)
                            .addComponent(jLabel72)
                            .addComponent(jLabel73)
                            .addComponent(jLabel64)
                            .addComponent(jLabel59))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(billingToLabel)
                            .addComponent(jLabel19)
                            .addComponent(billingFromLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(billingReadingID)
                            .addComponent(jLabel48)
                            .addComponent(billingBillNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(billingPresentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(billingPrevField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(billingCuField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(billingMeteredSalesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(billingPenaltyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel70)
                            .addComponent(billingMeterMaintenanceChargeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel59)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel72)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel73)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(billingReadingClear, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(billingSaveBtn)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))))
        );

        jTabbedPane2.addTab("Bill", jPanel10);

        jPanel16.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Arrears"), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel47.setText("FROM:");

        billingPrevFrom.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevFrom.setText("00/00/00");

        billingPrevTo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevTo.setText("00/00/00");

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel50.setText("TO:");

        billingPrevPresent.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevPresent.setText("0");

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel52.setText("Present:");

        billingPrevPrevious.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevPrevious.setText("0");

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel54.setText("Previous:");

        billingPrevCumc.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevCumc.setText("0");

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel56.setText("Cubic Meter Consumed:");

        billingPrevWS.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevWS.setText("0");

        jLabel58.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel58.setText("Water Sale:");

        billingPrevPenalty.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevPenalty.setText("0");

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel60.setText("Penalty:");

        billingPrevMeterMentenance.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        billingPrevMeterMentenance.setText("0");

        jLabel68.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel68.setText("Meter Maintenance Charge:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(billingPrevMeterMentenance))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billingPrevFrom)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billingPrevTo))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel60)
                            .addComponent(jLabel58)
                            .addComponent(jLabel52)
                            .addComponent(jLabel56)
                            .addComponent(jLabel54))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(billingPrevPresent, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(billingPrevCumc)
                                    .addComponent(billingPrevPrevious))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(billingPrevPenalty, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(billingPrevWS, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap(507, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(billingPrevFrom)
                    .addComponent(jLabel50)
                    .addComponent(billingPrevTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(billingPrevPresent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(billingPrevPrevious))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(billingPrevCumc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(billingPrevWS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(billingPrevPenalty))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(billingPrevMeterMentenance)
                    .addComponent(jLabel68))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Arrears", jPanel16);

        javax.swing.GroupLayout billing_right_paneLayout = new javax.swing.GroupLayout(billing_right_pane);
        billing_right_pane.setLayout(billing_right_paneLayout);
        billing_right_paneLayout.setHorizontalGroup(
            billing_right_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billing_right_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2))
        );
        billing_right_paneLayout.setVerticalGroup(
            billing_right_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billing_right_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, Short.MAX_VALUE))
        );

        billingConcessionairesTable.setBorder(new javax.swing.border.MatteBorder(null));
        billingConcessionairesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        billingConcessionairesTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        billingConcessionairesTable.setSelectionBackground(new java.awt.Color(0, 102, 51));
        billingConcessionairesTable.setUpdateSelectionOnSort(false);
        billingConcessionairesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billingConcessionairesTableMouseClicked(evt);
            }
        });
        billingConcessionairesTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                billingConcessionairesTableKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(billingConcessionairesTable);
        billingConcessionairesTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout mainBillingPaneLayout = new javax.swing.GroupLayout(mainBillingPane);
        mainBillingPane.setLayout(mainBillingPaneLayout);
        mainBillingPaneLayout.setHorizontalGroup(
            mainBillingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBillingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainBillingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(mainBillingPaneLayout.createSequentialGroup()
                        .addComponent(billing_left_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billing_right_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainBillingPaneLayout.setVerticalGroup(
            mainBillingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBillingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainBillingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(billing_right_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(billing_left_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
        );

        mainBilllingScrollPane.setViewportView(mainBillingPane);

        javax.swing.GroupLayout billPaneLayout = new javax.swing.GroupLayout(billPane.getContentPane());
        billPane.getContentPane().setLayout(billPaneLayout);
        billPaneLayout.setHorizontalGroup(
            billPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainBilllingScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE)
        );
        billPaneLayout.setVerticalGroup(
            billPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billPaneLayout.createSequentialGroup()
                .addComponent(mainBilllingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        desktopPane.add(billPane);
        billPane.setBounds(0, -10, 1150, 670);
        try {
            billPane.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        payPane.setTitle("Payment");
        payPane.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/payment-icon.png"))); // NOI18N
        payPane.setOpaque(true);
        payPane.setPreferredSize(new java.awt.Dimension(1166, 477));
        payPane.setVisible(false);
        payPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                payPaneMouseMoved(evt);
            }
        });

        payment_main_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Concessionaires Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel23.setText("Account No:");

        paymentAcnField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        paymentConcessionaireField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel42.setText("Concessionaire:");

        paymentAddressField.setEditable(false);
        paymentAddressField.setBackground(new java.awt.Color(255, 255, 255));
        paymentAddressField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel61.setText("Address:");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel65.setText("Meter No:");

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/search-icon.png"))); // NOI18N
        jButton7.setText("Search");

        paymentTable.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        paymentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(paymentTable);

        paymentMeterNOLabelField.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        paymentMeterNOLabelField.setText("0000");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentAddressField)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(paymentConcessionaireField, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(paymentAcnField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel61)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addGap(18, 18, 18)
                                .addComponent(paymentMeterNOLabelField)))
                        .addGap(0, 99, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton7)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentAcnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentConcessionaireField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(paymentMeterNOLabelField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        paymentCurrentPanel.setBackground(new java.awt.Color(255, 255, 255));
        paymentCurrentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Year", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        paymentCurrentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Meter Maintenance Charge", "0"},
                {"Metered Sales", "0"},
                {"Penalty", "0"},
                {"Installation Fee", "0"},
                {"Materials", "0"},
                {"Reconnection Fee", "0"},
                {"Service Fee", "0"},
                {"Transfer Fee", "0"}
            },
            new String [] {
                " Variables", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paymentCurrentTable.getTableHeader().setReorderingAllowed(false);
        paymentCurrentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentCurrentTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(paymentCurrentTable);
        paymentCurrentTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (paymentCurrentTable.getColumnModel().getColumnCount() > 0) {
            paymentCurrentTable.getColumnModel().getColumn(0).setResizable(false);
            paymentCurrentTable.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Month:");

        paymentCurrentMonth.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        paymentCurrentMonth.setText("XXXXXX");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Present Reading:");

        paymentCurrentPresent.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        paymentCurrentPresent.setText("0");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Previous Reading:");

        paymentCurrentPrevious.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        paymentCurrentPrevious.setText("0");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Cubic Meter Consumed:");

        paymentCurrentCubic.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        paymentCurrentCubic.setText("0");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Sub Total:");

        paymentCurrentSubTotal.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        paymentCurrentSubTotal.setText("0");

        jLabel21.setText("Bill #:");

        paymentBillNoLabel.setForeground(new java.awt.Color(255, 0, 0));
        paymentBillNoLabel.setText("00000");

        jLabel25.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel25.setText("Date Now:");

        paymentDate.setText("00/00/00");

        javax.swing.GroupLayout paymentCurrentPanelLayout = new javax.swing.GroupLayout(paymentCurrentPanel);
        paymentCurrentPanel.setLayout(paymentCurrentPanelLayout);
        paymentCurrentPanelLayout.setHorizontalGroup(
            paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paymentCurrentPrevious))
                    .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                        .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paymentCurrentPresent))
                            .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paymentCurrentMonth)))
                        .addGap(32, 32, 32)
                        .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentDate))
                            .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paymentCurrentCubic)))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentBillNoLabel)
                .addGap(208, 208, 208)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paymentCurrentSubTotal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paymentCurrentPanelLayout.setVerticalGroup(
            paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentCurrentPanelLayout.createSequentialGroup()
                .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paymentCurrentPanelLayout.createSequentialGroup()
                        .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(paymentCurrentMonth)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paymentCurrentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(paymentDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(paymentCurrentPresent)
                    .addComponent(jLabel28)
                    .addComponent(paymentCurrentCubic))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(paymentCurrentPrevious))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentCurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(paymentCurrentSubTotal)
                    .addComponent(jLabel21)
                    .addComponent(paymentBillNoLabel))
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("Current", paymentCurrentPanel);

        paymentPreviousPanel.setBackground(new java.awt.Color(255, 255, 255));
        paymentPreviousPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Year", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        paymentCurrentTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Meter Maintenance Charge", "0"},
                {"Metered Sales", "0"},
                {"Penalty", "0"},
                {"Meter Maintenance", "0"},
                {"Installation Fee", "0"},
                {"Materials", "0"},
                {"Reconnection Fee", "0"},
                {"Service Fee", "0"},
                {"Transfer Fee", "0"}
            },
            new String [] {
                " Variables", "Value"
            }
        ));
        paymentCurrentTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(paymentCurrentTable1);
        paymentCurrentTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (paymentCurrentTable1.getColumnModel().getColumnCount() > 0) {
            paymentCurrentTable1.getColumnModel().getColumn(0).setResizable(false);
            paymentCurrentTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Month:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel33.setText("XXXXXX");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("Present Reading:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel35.setText("0");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("Previous Reading:");

        jLabel37.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel37.setText("0");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel38.setText("Cubic Meter Consumed:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel39.setText("0");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setText("Sub Total:");

        paymentPreviousSubTotal.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        paymentPreviousSubTotal.setText("0");

        javax.swing.GroupLayout paymentPreviousPanelLayout = new javax.swing.GroupLayout(paymentPreviousPanel);
        paymentPreviousPanel.setLayout(paymentPreviousPanelLayout);
        paymentPreviousPanelLayout.setHorizontalGroup(
            paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentPreviousPanelLayout.createSequentialGroup()
                .addGroup(paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentPreviousPanelLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel33))
                    .addGroup(paymentPreviousPanelLayout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel35)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel39))
                    .addGroup(paymentPreviousPanelLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel37)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
            .addGroup(paymentPreviousPanelLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paymentPreviousSubTotal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paymentPreviousPanelLayout.setVerticalGroup(
            paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentPreviousPanelLayout.createSequentialGroup()
                .addGroup(paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentPreviousPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(paymentPreviousSubTotal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paymentPreviousPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paymentPreviousPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Previous", jPanel13);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Payment"));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Cash:");

        paymentCashField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        paymentTotalLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        paymentTotalLabel.setText("0.00");

        jLabel62.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel62.setText("Total:");

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel63.setText("O.R No.");

        paymentORNOLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        paymentORNOLabel.setForeground(new java.awt.Color(204, 0, 0));
        paymentORNOLabel.setText("000000");

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/cashreg-icon.png"))); // NOI18N
        jButton6.setText("SUBMIT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel62)
                    .addComponent(jLabel16))
                .addGap(34, 34, 34)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentCashField)
                    .addComponent(paymentTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addGap(18, 18, 18)
                        .addComponent(paymentORNOLabel)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentORNOLabel)
                    .addComponent(jLabel63))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel62))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(paymentTotalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymentCashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout payment_main_panelLayout = new javax.swing.GroupLayout(payment_main_panel);
        payment_main_panel.setLayout(payment_main_panelLayout);
        payment_main_panelLayout.setHorizontalGroup(
            payment_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payment_main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(payment_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        payment_main_panelLayout.setVerticalGroup(
            payment_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payment_main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(payment_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(payment_main_panelLayout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(payment_main_panel);

        javax.swing.GroupLayout payPaneLayout = new javax.swing.GroupLayout(payPane.getContentPane());
        payPane.getContentPane().setLayout(payPaneLayout);
        payPaneLayout.setHorizontalGroup(
            payPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE)
        );
        payPaneLayout.setVerticalGroup(
            payPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payPaneLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        desktopPane.add(payPane);
        payPane.setBounds(0, 0, 1150, 640);
        try {
            payPane.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        userPane.setTitle("USER");
        userPane.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/user-icon.png"))); // NOI18N
        userPane.setVisible(false);
        userPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                userPaneMouseMoved(evt);
            }
        });

        jLabel123.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel123.setText("Name:");

        UFname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UFname.setText("Your Full Name");

        jLabel125.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel125.setText("User ID:");

        UFuserID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        UFuserID.setForeground(new java.awt.Color(255, 0, 51));
        UFuserID.setText("LWD0001");

        jLabel127.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel127.setText("Username:");

        UFusername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UFusername.setText("username");

        UFstatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UFstatus.setText("ACTIVE");

        jLabel130.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel130.setText("Status:");

        jLabel131.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel131.setText("Password:");

        UFpassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UFpassword.setText("*********");

        PositionTitle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PositionTitle.setText("Position:");

        UFtask.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UFtask.setText("xxxxxxx");

        javax.swing.GroupLayout userPaneLayout = new javax.swing.GroupLayout(userPane.getContentPane());
        userPane.getContentPane().setLayout(userPaneLayout);
        userPaneLayout.setHorizontalGroup(
            userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel125)
                    .addComponent(jLabel123)
                    .addComponent(jLabel127)
                    .addComponent(jLabel130)
                    .addComponent(jLabel131)
                    .addComponent(PositionTitle))
                .addGap(18, 18, 18)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UFtask)
                    .addComponent(UFpassword)
                    .addComponent(UFstatus)
                    .addComponent(UFusername)
                    .addComponent(UFuserID)
                    .addComponent(UFname))
                .addContainerGap(954, Short.MAX_VALUE))
        );
        userPaneLayout.setVerticalGroup(
            userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPaneLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel125)
                    .addComponent(UFuserID))
                .addGap(18, 18, 18)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel123)
                    .addComponent(UFname))
                .addGap(18, 18, 18)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel127)
                    .addComponent(UFusername))
                .addGap(17, 17, 17)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UFpassword)
                    .addComponent(jLabel131))
                .addGap(18, 18, 18)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UFstatus)
                    .addComponent(jLabel130))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UFtask)
                    .addComponent(PositionTitle))
                .addContainerGap(335, Short.MAX_VALUE))
        );

        desktopPane.add(userPane);
        userPane.setBounds(0, 0, 1150, 370);
        try {
            userPane.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jToolBar1.setRollover(true);
        desktopPane.add(jToolBar1);
        jToolBar1.setBounds(290, 610, 13, 2);

        jScrollPane4.setViewportView(desktopPane);

        jMenu1.setText("File");

        menuPrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        menuPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/print-icon.png"))); // NOI18N
        menuPrint.setText("Print");
        menuPrint.setEnabled(false);
        jMenu1.add(menuPrint);

        menuPrintPreview.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuPrintPreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/print_preview-icon.png"))); // NOI18N
        menuPrintPreview.setText("Print Preview");
        menuPrintPreview.setEnabled(false);
        jMenu1.add(menuPrintPreview);
        jMenu1.add(jSeparator4);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/exit-icon.png"))); // NOI18N
        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator3);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("View");

        jMenuItem4.setText("Reports");
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/menu-help-icon.png"))); // NOI18N

        jMenuItem2.setText("Terms & Conditions");
        jMenu4.add(jMenuItem2);
        jMenu4.add(jSeparator15);

        jMenuItem7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem7.setForeground(new java.awt.Color(0, 51, 204));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/fb-like-icon.png"))); // NOI18N
        jMenuItem7.setText("Like us on Facebook");
        jMenuItem7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/lwd-hompage-icon.png"))); // NOI18N
        jMenuItem5.setText("Home Page");
        jMenuItem5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);
        jMenu4.add(jSeparator13);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/settings-icon.png"))); // NOI18N
        jMenuItem3.setText("Settings");
        jMenu4.add(jMenuItem3);
        jMenu4.add(jSeparator14);

        jMenuItem8.setText("Check Updates");
        jMenu4.add(jMenuItem8);
        jMenu4.add(jSeparator2);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lwdp/img/menu-about-icon.png"))); // NOI18N
        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    //Manage Concessionaires Button    
    private void billingSearchConcessionaires(String input){
        mySQLconnect mc = new mySQLconnect();
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Address","Classification","Size","Zone No","Meter No"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        billingConcessionairesTable.setModel(model);
        
        
        
        String sql = "SELECT c.acn as 'Account No',c.name as 'Concessionaires', m.address as 'Address',m.meterNum as 'Meter No' FROM `concessionaires_tbl` c,`meter_tbl` m WHERE m.connection_status = 1 AND c.acn = m.acn and m.reading_count = 0 AND c.name LIKE '%"+input+"%'";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            String accountNo;
           
                // create an array of objects to set the row data
            final String[] rows = new String[7];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("Account No");
                billingAccountNoField.setText(rows[0]);
                rows[1] = rs.getString("Concessionaires");
                billingConcessionairesField.setText(rows[1]);
                rows[2] = rs.getString("Address");
                billingAddressField.setText(rows[2]);
                accountNo = rs.getString("Account No");
                if(accountNo.length() == 11){
			rows[3] = cc.getClassification(accountNo.charAt(5));
                        billingClassificationLabel.setText(rows[3]);
			rows[4] = cc.getMeterSize(accountNo.charAt(6));
                        billingSizeLabel.setText(rows[4]);
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
                        billingZoneLabel.setText(rows[5]);
		}else{
			rows[3] = cc.getClassification(accountNo.charAt(4));
                        billingClassificationLabel.setText(rows[3]);
			rows[4] = cc.getMeterSize(accountNo.charAt(5));
                        billingSizeLabel.setText(rows[4]);
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
                        billingZoneLabel.setText(rows[5]);
		}
                
                rows[6] = rs.getString("Meter No");
                billingMeterNoLabel.setText(rows[6]);
                setReading(rows[6]);
                //011-3B2-001
                
                // add row to the model;
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }

    // Call this method to search concessionaires in Billing Frame
    private void billingSearchAccountNo(String input){
        mySQLconnect mc = new mySQLconnect();
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Address","Classification","Size","Zone No","Meter No"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        billingConcessionairesTable.setModel(model);
        
        
        
        String sql = "SELECT c.acn as 'Account No',c.name as 'Concessionaires', m.address as 'Address',m.meterNum as 'Meter No' FROM `concessionaires_tbl` c,`meter_tbl` m WHERE m.connection_status = 1 AND c.acn = m.acn and m.reading_count = 0 AND c.acn LIKE '%"+input+"%'";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            String accountNo;
           
                // create an array of objects to set the row data
            final String[] rows = new String[7];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("Account No");
                billingAccountNoField.setText(rows[0]);
                rows[1] = rs.getString("Concessionaires");
                billingConcessionairesField.setText(rows[1]);
                rows[2] = rs.getString("Address");
                billingAddressField.setText(rows[2]);
                accountNo = rs.getString("Account No");
                if(accountNo.length() == 11){
			rows[3] = cc.getClassification(accountNo.charAt(5));
                        billingClassificationLabel.setText(rows[3]);
			rows[4] = cc.getMeterSize(accountNo.charAt(6));
                        billingSizeLabel.setText(rows[4]);
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
                        billingZoneLabel.setText(rows[5]);
		}else{
			rows[3] = cc.getClassification(accountNo.charAt(4));
                        billingClassificationLabel.setText(rows[3]);
			rows[4] = cc.getMeterSize(accountNo.charAt(5));
                        billingSizeLabel.setText(rows[4]);
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
                        billingZoneLabel.setText(rows[5]);
		}
                
                rows[6] = rs.getString("Meter No");
                billingMeterNoLabel.setText(rows[6]);
                setReading(rows[6]);
                //011-3B2-001
                
                // add row to the model;
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    
    private void setReading(String mn){
        mySQLconnect mc = new mySQLconnect();

       
        
        String sql = "SELECT COUNT(*) as 'rows',CURDATE() as 'Current Date',m.meterNum as 'Meter No',r.`from` as 'From', r.`to` as 'To', r.previous as 'Previous', r.present as 'Present',r.meteredSales as 'Metered Sales',r.penalty as 'Penalty',r.cubicMeterConsumed as 'Cu. m' FROM `meter_tbl` m,`reading_tbl` r WHERE m.meterNum = r.meterNum AND r.meterNum = "+mn+" AND (EXTRACT(MONTH FROM r.`to`)+1) = EXTRACT(MONTH FROM CURDATE()) ";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);

            
            if(rs.next()){ 
                int r = Integer.parseInt(rs.getString("rows"));
                
               // System.out.println(r); 
                if(r == 0){
                    billingFromLabel.setText(getInstalledDate(mn));
                    billingToLabel.setText(rs.getString("Current Date"));
                    billingPrevField.setText("0");
                 
                }else{
                    billingFromLabel.setText(rs.getString("To"));
                    billingToLabel.setText(rs.getString("Current Date"));
                    billingPrevField.setText(rs.getString("Present"));
                }
                try{
                    if(rs.getString("Previous") == null){
                        billingPrevField.setEditable(true);
                    }else{
                        billingPrevField.setEditable(false);
                    }
                }catch(Exception e){
                    
                }
            }    
            
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    //
    
    private String getInstalledDate(String mn){
        mySQLconnect mc = new mySQLconnect();

       String installed_date = "00/00/00";
        
        String sql = "SELECT date_installed FROM `meter_tbl` WHERE meterNum = '"+mn+"'";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);

            
            if(rs.next()){ 
                
                installed_date = rs.getString("date_installed");
            }    
            
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
        return installed_date;
    }
    
    private void showBilledConcessionaires(){
        mySQLconnect mc = new mySQLconnect();
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Address","Classification","Size","Zone No","Meter No"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        paymentTable.setModel(model);
        
        
        
        String sql = "SELECT c.acn as 'Account No',c.name as 'Concessionaire',m.address as 'Address',m.meterNum as 'Meter No' FROM `concessionaires_tbl` c,`meter_tbl` m,`reading_tbl` r,`billing_tbl` b WHERE c.acn = m.acn AND m.meterNum = r.meterNum AND r.ID = b.readingID AND b.isPayed = 0";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            String accountNo;
           
                // create an array of objects to set the row data
            final Object[] rows = new Object[7];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("Account No");
                rows[1] = rs.getString("Concessionaire");
                rows[2] = rs.getString("Address");
                accountNo = rs.getString("Account No");
                if(accountNo.length() == 11){
			rows[3] = cc.getClassification(accountNo.charAt(5));
			rows[4] = cc.getMeterSize(accountNo.charAt(6));
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
		}else{
			rows[3] = cc.getClassification(accountNo.charAt(4));
			rows[4] = cc.getMeterSize(accountNo.charAt(5));
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
		}
                
                rows[6] = rs.getString("Meter No");
                
                //011-3B2-001
                
                // add row to the model
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    //Show Concesssionaires Billing Frame
    private void showConcessionairesDetails(){
        mySQLconnect mc = new mySQLconnect();
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Address","Classification","Size","Zone No","Meter No"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        billingConcessionairesTable.setModel(model);
        
        
        
        String sql = "SELECT c.acn as 'Account No',c.name as 'Concessionaires', m.address as 'Address',m.meterNum as 'Meter No' FROM `concessionaires_tbl` c,`meter_tbl` m WHERE m.connection_status = 1 AND c.acn = m.acn and m.reading_count = 0";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            String accountNo;
           
                // create an array of objects to set the row data
            final Object[] rows = new Object[7];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("Account No");
                rows[1] = rs.getString("Concessionaires");
                rows[2] = rs.getString("Address");
                accountNo = rs.getString("Account No");
                if(accountNo.length() == 11){
			rows[3] = cc.getClassification(accountNo.charAt(5));
			rows[4] = cc.getMeterSize(accountNo.charAt(6));
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
		}else{
			rows[3] = cc.getClassification(accountNo.charAt(4));
			rows[4] = cc.getMeterSize(accountNo.charAt(5));
			rows[5] = accountNo.charAt(0)+""+accountNo.charAt(1);
		}
                
                rows[6] = rs.getString("Meter No");
                
                //011-3B2-001
                
                // add row to the model
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    private void viewAllconcessionaires(){
        mySQLconnect mc = new mySQLconnect();
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Guarantee Deposit","Meter Deposit","Address","Meter No","Connection Status"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        concessionairesJTable.setModel(model);
        
        
        
        String sql = "SELECT c.acn as 'Account No',c.name as 'Concessionaires', c.guaranteeDeposit as 'Guarantee Deposit', c.meterDeposit as 'Meter Deposit',m.address as 'Address', m.meterNum as 'Meter No',m.connection_status as 'Connection Status' FROM concessionaires_tbl c,meter_tbl m WHERE c.acn = m.acn";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            
           
                // create an array of objects to set the row data
            final Object[] rows = new Object[7];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("Account No");
                rows[1] = rs.getString("Concessionaires");
                rows[2] = rs.getString("Guarantee Deposit");
                rows[3] = rs.getString("Meter Deposit");
                rows[4] = rs.getString("Address");
                rows[5] = rs.getString("Meter No");
                if(rs.getString("Connection Status").equals("0")){
                    rows[6] = "Meter Installed Yet";
                }else if(rs.getString("Connection Status").equals("1")){
                    rows[6] = "Connected";
                }else{
                    rows[6] = "Disconnected";
                }
                
                
                // add row to the model
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    private void concessionairesWithoutMeter(){
        
        mySQLconnect mc = new mySQLconnect();
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Guarantee Deposit","Meter Deposit"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        concessionairesJTable.setModel(model);
        
        
        
        String sql = "SELECT * FROM `concessionaires_tbl` WHERE hasMeter = 0";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            
           
                // create an array of objects to set the row data
            final Object[] rows = new Object[5];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("acn");
                rows[1] = rs.getString("name");
                rows[2] = rs.getString("guaranteeDeposit");
                rows[3] = rs.getString("meterDeposit");
                if("0".equals(rs.getString("hasMeter"))){
                    rows[4] = "No Meter";
                }
                
                // add row to the model
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    private void concessionairesWithMeter(){
        mySQLconnect mc = new mySQLconnect();
        String sql = "";
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Account No","Concessionaires","Address","Meter No","Connection Status"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
        
        // set the model to the table
        concessionairesJTable.setModel(model);
        
        
        if(topBarZone.getSelectedItem().toString().equals("--") && topBarClassification.getSelectedItem().toString().equals("--") && topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            // Display ALL
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 ORDER BY c.acn DESC";
        }else if(!topBarZone.getSelectedItem().toString().equals("--") && topBarClassification.getSelectedItem().toString().equals("--") && topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Zone No
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '"+topBarZone.getSelectedItem()+"%' ORDER BY c.acn DESC";
        }else if(topBarZone.getSelectedItem().toString().equals("--") && !topBarClassification.getSelectedItem().toString().equals("--") && topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            // Dsplay By Specific Classification
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '%-"+cc.getClassificationValue(topBarClassification.getSelectedItem().toString())+"%' ORDER BY c.acn DESC";
        }else if(topBarZone.getSelectedItem().toString().equals("--") && topBarClassification.getSelectedItem().toString().equals("--") && !topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Meter Size
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '%"+cc.getMeterSizeValue(topBarSize.getSelectedItem().toString())+"-%' ORDER BY c.acn DESC";
        }else if(topBarZone.getSelectedItem().toString().equals("--") && topBarClassification.getSelectedItem().toString().equals("--") && topBarSize.getSelectedItem().toString().equals("--") && !topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Connection Status
            switch (topBarConnectionStatus.getSelectedItem().toString()) {
                case "Connected":
                    sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and m.connection_status = 1 ORDER BY c.acn DESC";
                    break;
                case "Disconnected":
                    sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and m.connection_status = 2 ORDER BY c.acn DESC";
                    break;
                default:
                    sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and m.connection_status = 0 ORDER BY c.acn DESC";
                    break;
            }
            
        }else if(!topBarZone.getSelectedItem().toString().equals("--") && !topBarClassification.getSelectedItem().toString().equals("--") && topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Zone No and Classification
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '"+topBarZone.getSelectedItem().toString()+""+topBarBookNo.getText()+"-"+cc.getClassificationValue(topBarClassification.getSelectedItem().toString())+"%' ORDER BY c.acn DESC";
        }else if(topBarZone.getSelectedItem().toString().equals("--") && !topBarClassification.getSelectedItem().toString().equals("--") && !topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Classification and Meter Size
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '%-"+cc.getClassificationValue(topBarClassification.getSelectedItem().toString())+""+cc.getMeterSizeValue(topBarSize.getSelectedItem().toString())+"-%' ORDER BY c.acn DESC";
        }else if(!topBarZone.getSelectedItem().toString().equals("--") && topBarClassification.getSelectedItem().toString().equals("--") && !topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Zone No  and Meter Size
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '%"+topBarZone.getSelectedItem().toString()+"1-%"+cc.getMeterSizeValue(topBarSize.getSelectedItem().toString())+"-%' ORDER BY c.acn DESC";
        }else if(!topBarZone.getSelectedItem().toString().equals("--") && !topBarClassification.getSelectedItem().toString().equals("--") && !topBarSize.getSelectedItem().toString().equals("--") && topBarConnectionStatus.getSelectedItem().toString().equals("--")){
            //Display By Specific Zone No, Classification, and Meter Size
            sql = "SELECT c.acn as `acn`,c.name as `name`,m.address as `address`, m.meterNum as `meterNum`, m.connection_status as `cs` FROM `concessionaires_tbl` c , `meter_tbl` m WHERE c.acn = m.acn and c.hasMeter = 1 and c.acn Like '%"+topBarZone.getSelectedItem().toString()+"1-"+cc.getClassificationValue(topBarClassification.getSelectedItem().toString())+""+cc.getMeterSizeValue(topBarSize.getSelectedItem().toString())+"-%' ORDER BY c.acn DESC";
        }
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            
           
                // create an array of objects to set the row data
            final Object[] rows = new Object[5];            
            //store row data
            while(rs.next())
            {        
                rows[0] = rs.getString("acn");
                rows[1] = rs.getString("name");
                rows[2] = rs.getString("address");
                rows[3] = rs.getString("meterNum");
                if("0".equals(rs.getString("cs"))){
                    rows[4] = "Not Installed";
                }else if("1".equals(rs.getString("cs"))){
                    rows[4] = "Connected";
                }else{
                    rows[4] = "Disconnected";
                }
                
                // add row to the model
                model.addRow(rows);
                
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    //logout if logout Button Pressed
    //Manage Billings
    //Manage Payments
    //Logout if Main Frame has been close
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    //Manage users
    private void billingSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingSaveBtnActionPerformed
        //accountNoPattern cc = new accountNoPattern();
        if(cc.getReadingCOunt(billingMeterNoLabel.getText()) > 2){
            JOptionPane.showMessageDialog(new JPanel(), "This Concessionaire had two(2) unpaid bills", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
           
            clearMeterTextFields();            
            
            showConcessionairesDetails();

            if(cc.getReadingCOunt(billingMeterNoLabel.getText()) != 2){

                
                    JOptionPane.showMessageDialog(new JPanel(),"Bill Sucess :) ","Success",JOptionPane.INFORMATION_MESSAGE);
                    cc.insertMeterReading( cc.getReadingID(),billingFromLabel.getText(),billingToLabel.getText(),billingPrevField.getText(),billingPresentField.getText(),billingCuField.getText(),billingMeteredSalesField.getText(),billingPenaltyField.getText(),billingMeterNoLabel.getText());
                    cc.update_meterReadingCount(billingMeterNoLabel.getText(),cc.getReadingCOunt(billingMeterNoLabel.getText()));
                    cc.insertBill(cc.getBillingID(),'1',billingMeterMaintenanceChargeField.getText(),statusBarUID.getText(),billingReadingID.getText());
                    
                    //
                    printPreview p = new printPreview(this,true);
                    p.setValuesToPrint(billingAccountNoField.getText(),billingConcessionairesField.getText(),billingClassificationLabel.getText(),billingMeterNoLabel.getText(),billingAddressField.getText(),billingZoneLabel.getText(),billingFromLabel.getText(),billingToLabel.getText(),"Due Date Here",billingPresentField.getText(),billingPrevField.getText(),billingCuField.getText(),billingMeteredSalesField.getText(),billingPenaltyField.getText(),billingMeterMaintenanceChargeField.getText(),"Sub Total",billingPrevFrom.getText(),billingPrevTo.getText(),billingPrevPresent.getText(),billingPrevPrevious.getText(),billingPrevCumc.getText(),billingPrevWS.getText(),billingPrevPenalty.getText(),billingPrevMeterMentenance.getText(),"Arrears Sub Total","TOTAL AMOUNT HERE",billingBillNo.getText(),statusBarName.getText());
                    p.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(new JPanel(),billingConcessionairesField.getText()+" have 2 unpaid bills","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
            billingReadingID.setText(cc.getReadingID()+"");
            
            billingSaveBtn.setEnabled(false);
            clearAll();
        }
    }//GEN-LAST:event_billingSaveBtnActionPerformed

    
    private void billingReadingClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingReadingClearActionPerformed

        billingSaveBtn.setEnabled(false);
        billingCuField.setText("0");
        billingMeteredSalesField.setText("0");
        billingPresentField.setText("0");
    }//GEN-LAST:event_billingReadingClearActionPerformed

    private void billingPresentFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_billingPresentFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(billingAccountNoField.getText().equals("")){
                JOptionPane.showMessageDialog(new JPanel(), "No Concessionaires Found", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                try{
                    int cubic = Integer.parseInt(billingPresentField.getText()) - Integer.parseInt(billingPrevField.getText());
                    billingCuField.setText(cubic+"");

                    switch (billingSizeLabel.getText()) {
                        case "1/2":
                        billingMeteredSalesField.setText(cc.getOneHalfMeteredSales(billingClassificationLabel.getText(),cubic)+"");
                        break;
                        case "3/4":
                        billingMeteredSalesField.setText(cc.getThreeFourthMeteredSales(billingClassificationLabel.getText(),cubic)+"");
                        break;
                        default:
                        billingMeteredSalesField.setText(cc.getOneInchMeteredSales(billingClassificationLabel.getText(),cubic)+"");
                        break;
                    }
                    billingSaveBtn.setEnabled(true);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(new JPanel(),e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_billingPresentFieldKeyPressed

    private void billingPresentFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_billingPresentFieldFocusGained
        billingPresentField.setText("");
    }//GEN-LAST:event_billingPresentFieldFocusGained

    private void billingSearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billingSearchBtnMouseClicked
        if("Clear Text".equals(billingSearchBtn.getText())){
            billingSearchBtn.setText("Search");
            billingAccountNoField.setText("");
            billingConcessionairesField.setText("");
            billingAddressField.setText("");
            billingFromLabel.setText("00/00/00");
            billingPrevField.setText("0");
            billingSizeLabel.setText("NONE");
            billingClassificationLabel.setText("NONE");
            billingMeterNoLabel.setText("NONE");
            billingZoneLabel.setText("NONE");
            billingPrevField.setEditable(false);
            showConcessionairesDetails();
        }else{
            billingSearchBtn.setText("Clear Text");
            if(!"".equals(billingAccountNoField.getText())){
                billingSearchAccountNo(billingAccountNoField.getText());
                setConcessionaireReadingDetails();
                billingSaveBtn.setEnabled(true);
            }else if(!"".equals(billingConcessionairesField.getText())){
                billingSearchConcessionaires(billingConcessionairesField.getText());
                setConcessionaireReadingDetails();
                billingSaveBtn.setEnabled(true);
            }else{
                billingSaveBtn.setEnabled(false);
                billingSearchBtn.setText("Search");
                JOptionPane.showMessageDialog(new JPanel(), "No Search Inputs Found, Please provide one", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_billingSearchBtnMouseClicked

    private void billingConcessionairesFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_billingConcessionairesFieldFocusGained
        billingConcessionairesField.setText("");
        billingAddressField.setText("");
        billingAccountNoField.setText("");

        //clear the reading area at the right side
        billingSaveBtn.setEnabled(false);
        billingCuField.setText("0");
        billingMeteredSalesField.setText("0");
        billingPresentField.setText("0");

        if("Clear Text".equals(billingSearchBtn.getText())){
            billingSearchBtn.setText("Search");
            billingAccountNoField.setText("");
            billingConcessionairesField.setText("");
            billingAddressField.setText("");
            billingFromLabel.setText("00/00/00");
            billingPrevField.setText("0");
            billingSizeLabel.setText("NONE");
            billingClassificationLabel.setText("NONE");
            billingMeterNoLabel.setText("NONE");
            billingZoneLabel.setText("NONE");
            billingPrevField.setEditable(false);
            showConcessionairesDetails();
        }else{
            billingSearchBtn.setText("Clear Text");
            if(!"".equals(billingAccountNoField.getText())){
                billingSearchAccountNo(billingAccountNoField.getText());
                setConcessionaireReadingDetails();
                billingSaveBtn.setEnabled(true);
            }else if(!"".equals(billingConcessionairesField.getText())){
                billingSearchConcessionaires(billingConcessionairesField.getText());
                setConcessionaireReadingDetails();
                billingSaveBtn.setEnabled(true);
            }else{
                billingSaveBtn.setEnabled(false);
                billingSearchBtn.setText("Search");
                JOptionPane.showMessageDialog(new JPanel(), "No Search Inputs Found, Please provide one", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_billingConcessionairesFieldFocusGained

    private void billingAccountNoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_billingAccountNoFieldFocusGained
        billingConcessionairesField.setText("");
        billingAddressField.setText("");
        billingAccountNoField.setText("");

        //clear the reading area at the rigth side.
        billingSaveBtn.setEnabled(false);
        billingCuField.setText("0");
        billingMeteredSalesField.setText("0");
        billingPresentField.setText("0");

        if("Clear Text".equals(billingSearchBtn.getText())){
            billingSearchBtn.setText("Search");
            billingAccountNoField.setText("");
            billingConcessionairesField.setText("");
            billingAddressField.setText("");
            billingFromLabel.setText("00/00/00");
            billingPrevField.setText("0");
            billingSizeLabel.setText("NONE");
            billingClassificationLabel.setText("NONE");
            billingMeterNoLabel.setText("NONE");
            billingZoneLabel.setText("NONE");
            billingPrevField.setEditable(false);
            showConcessionairesDetails();
        }else{
            billingSearchBtn.setText("Clear Text");
            if(!"".equals(billingAccountNoField.getText())){
                billingSearchAccountNo(billingAccountNoField.getText());
                setConcessionaireReadingDetails();
                billingSaveBtn.setEnabled(true);
            }else if(!"".equals(billingConcessionairesField.getText())){
                billingSearchConcessionaires(billingConcessionairesField.getText());
                setConcessionaireReadingDetails();
                billingSaveBtn.setEnabled(true);
            }else{
                billingSaveBtn.setEnabled(false);
                billingSearchBtn.setText("Search");
                JOptionPane.showMessageDialog(new JPanel(), "No Search Inputs Found, Please provide one", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_billingAccountNoFieldFocusGained

    private void displayConcessionairesDetailsToField(){
        //acnField.setText(concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),0).toString());
        if(billingConcessionairesTable.isRowSelected(billingConcessionairesTable.getSelectedRow())){
            //billingSaveBtn.setEnabled(true);
            billingAccountNoField.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),0).toString());
            billingConcessionairesField.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),1).toString());
            billingAddressField.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),2).toString());
            billingMeterNoLabel.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),6).toString());
            setReading(billingMeterNoLabel.getText());
            if(billingAccountNoField.getText().length() == 10){
                billingClassificationLabel.setText(cc.getClassification(billingAccountNoField.getText().charAt(4)));
                billingZoneLabel.setText(billingAccountNoField.getText().charAt(0)+""+billingAccountNoField.getText().charAt(1)+"");
                billingSizeLabel.setText(cc.getMeterSize(billingAccountNoField.getText().charAt(5)));
            }else{
                billingSizeLabel.setText(cc.getMeterSize(billingAccountNoField.getText().charAt(6)));
                billingClassificationLabel.setText(cc.getClassification(billingAccountNoField.getText().charAt(5)));
                billingZoneLabel.setText(billingAccountNoField.getText().charAt(0)+""+billingAccountNoField.getText().charAt(1)+"");
            }

            if(billingAccountNoField.getText().equals("")){
                billingSearchBtn.setText("Search");
            }else{
                billingSearchBtn.setText("Clear Text");
            }
        }else{
            billingSaveBtn.setEnabled(false);
        }
    }
    
    //Manage Concessionaires Tabs
    private void jTabbedPane9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane9MouseClicked
        concessionairesJTable.removeAll();
        switch (jTabbedPane9.getSelectedIndex()) {
            case 0:
            concessionairesWithMeter();
            clearConcessionairesTab1Field();

            break;
            case 1:
            concessionairesWithoutMeter();
            clearConcessionairesTab1Field();
            break;
            default:
            viewAllconcessionaires();
            break;
        }

    }//GEN-LAST:event_jTabbedPane9MouseClicked

    private void editMeterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMeterBtnMouseClicked
        if(editMeterBtn.getText().equals("Edit")){
            //EDIT THE METER
            editMeterBtn.setText("Save");
            editMeterBtn.setBackground(Color.red);
            editMeterNoField.setEditable(true);
            editAddressField.setEditable(true);

            //TO DO HERE
        }else{
            //SAVE THE METER DATA
            editMeterBtn.setText("Edit");
            editMeterBtn.setBackground(Color.blue);
            editMeterNoField.setEditable(false);
            editAddressField.setEditable(false);

            if(editConnectedRadio.isSelected() == true){
                cc.updateMeterDetails(editMeterNoField.getText(),editAddressField.getText(),"1",editAccountNoLabel.getText());
                viewAllconcessionaires();
            }else{
                cc.updateMeterDetails(editMeterNoField.getText(),editAddressField.getText(),"2",editAccountNoLabel.getText());
                viewAllconcessionaires();
            }

        }
    }//GEN-LAST:event_editMeterBtnMouseClicked

    private void editDisconnectedRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editDisconnectedRadioMouseClicked
        editConnectedRadio.setSelected(false);
        editDisconnectedRadio.setSelected(true);
        if(editDisconnectedRadio.isSelected()==true){
            editConnectedRadio.setText("Disconnected");
        }else{
            editConnectedRadio.setText("Disconnect");
        }
    }//GEN-LAST:event_editDisconnectedRadioMouseClicked

    private void editConnectedRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editConnectedRadioMouseClicked
        editConnectedRadio.setSelected(true);
        editDisconnectedRadio.setSelected(false);
        if(editConnectedRadio.isSelected() == true){
            editConnectedRadio.setText("Connected");
        }else{
            editConnectedRadio.setText("Connect");
        }
    }//GEN-LAST:event_editConnectedRadioMouseClicked

    private void editConcessionaireBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editConcessionaireBtnMouseClicked
        if(editConcessionaireBtn.getText().equals("Edit")){
            //EDIT THE METER
            editConcessionaireBtn.setText("Save");
            editConcessionaireBtn.setBackground(Color.red);
            editConcessionaireField.setEditable(true);
            editGuaranteeField.setEditable(true);
            editMeterField.setEditable(true);

            //TO DO HERE
        }else{
            //SAVE THE METER DATA
            editConcessionaireBtn.setText("Edit");
            editConcessionaireBtn.setBackground(Color.blue);
            editConcessionaireField.setEditable(false);
            editGuaranteeField.setEditable(false);
            editMeterField.setEditable(false);

            cc.updateConcessionairesDetails(editAccountNoLabel.getText(),editConcessionaireField.getText(),editGuaranteeField.getText(),editMeterField.getText());
            viewAllconcessionaires();
        }
    }//GEN-LAST:event_editConcessionaireBtnMouseClicked

    //Set Meter Details to database
    private void meterSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meterSaveBtnActionPerformed
        //Test if connectionStatusField Check Box is Check
        if(connectionStatusField.isSelected() == true){

            //insert Water Meter Details to database and return true if no Error and false if There is an Error.
            cc.insertWaterMeter(meterField.getText(),addressField.getText(),"1",acnField.getText());

            if(cc.hasMeter(acnField.getText()) == true){
                jTabbedPane9.setSelectedIndex(0);
                concessionairesWithMeter();
            }else{
                jTabbedPane9.setSelectedIndex(1);
                concessionairesWithoutMeter();
            }

            clearMeterTextFields(); //clear the inputs

            //End of Water Meter Details

        }else{
            //insert Water Meter Details to database and return true if no Error and false if There is an Error.
            cc.insertWaterMeter(meterField.getText(),addressField.getText(),"0",acnField.getText());
            if(cc.hasMeter(acnField.getText()) == true){
                jTabbedPane9.setSelectedIndex(0);
                concessionairesWithMeter();
            }else{
                jTabbedPane9.setSelectedIndex(1);
                concessionairesWithoutMeter();
            }
            clearMeterTextFields(); // clear the inputs

            //End of Water Meter Details
        }
        //End of connectionStatusField Checking
    }//GEN-LAST:event_meterSaveBtnActionPerformed

    //Add concessionaires
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        //Insert Concessionaires Details to Database
        if(!(nameField.getText().equals("")) && !(gdField.getText().equals("")) && !(mdField.getText().equals("")) ){
            if(cc.insertConcessionaires(accountNoJLabel.getText(),nameField.getText(),gdField.getText(),mdField.getText()) == true){
                setAccountNo();
                JOptionPane.showMessageDialog(new JPanel(), "New Concessionaires Added, With Account No. "+accountNoJLabel.getText(), "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                jTabbedPane9.setSelectedIndex(1);
                concessionairesWithoutMeter();
            }else{
                JOptionPane.showMessageDialog(new JPanel(), "There is an Error saving Concessionaires", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        }else{
            JOptionPane.showMessageDialog(new JPanel(), "Fill Upp all the blanks", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        //End of Insertion.
    }//GEN-LAST:event_jButton22ActionPerformed

    private void sizeBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sizeBoxItemStateChanged
        setAccountNo();
    }//GEN-LAST:event_sizeBoxItemStateChanged

    private void classificationBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classificationBoxItemStateChanged
        setAccountNo();
    }//GEN-LAST:event_classificationBoxItemStateChanged

    private void zoneBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_zoneBoxItemStateChanged
        setAccountNo();
    }//GEN-LAST:event_zoneBoxItemStateChanged

    private void concessionairesJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_concessionairesJTableMouseClicked
        acnField.setText(concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),0).toString());
        if(concessionairesJTable.isRowSelected(concessionairesJTable.getSelectedRow())){

            if(jTabbedPane9.getSelectedIndex() == 2) {
                editConcessionaireBtn.setEnabled(true);
                editMeterBtn.setEnabled(true);

            }else if(jTabbedPane9.getSelectedIndex() == 1){
                meterSaveBtn.setEnabled(true);
                //cc.insertWaterMeter(meterField.getText(),addressField.getText(),"0",acnField.getText());
            }else{
                editConcessionaireBtn.setEnabled(false);
                editMeterBtn.setEnabled(false);
            }

            setConcessionairesToEdit(concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),0).toString(),concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),1).toString(),concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),2).toString(),concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),3).toString(),concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),5).toString(),concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),4).toString(),concessionairesJTable.getModel().getValueAt(concessionairesJTable.getSelectedRow(),6).toString());
        }else{
            switch (jTabbedPane9.getSelectedIndex()) {

                default:
                editConcessionaireBtn.setEnabled(false);
                editMeterBtn.setEnabled(false);
                break;
            }
        }
    }//GEN-LAST:event_concessionairesJTableMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
       // xyAxis.setText("("+evt.getX()+","+evt.getY()+")");
    }//GEN-LAST:event_formMouseMoved

    private void userPaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPaneMouseMoved
      // xyAxis.setText("("+evt.getX()+","+evt.getY()+")");
    }//GEN-LAST:event_userPaneMouseMoved

    private void billPaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billPaneMouseMoved
       // xyAxis.setText("("+evt.getX()+","+evt.getY()+")");
    }//GEN-LAST:event_billPaneMouseMoved

    private void conPaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conPaneMouseMoved
        //xyAxis.setText("("+evt.getX()+","+evt.getY()+")");
    }//GEN-LAST:event_conPaneMouseMoved

    private void mainConcessionairesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainConcessionairesBtnActionPerformed
        if(conPane.isVisible() != true){
            payPane.setVisible(false);
            conPane.setVisible(true);
            billPane.setVisible(false);
            userPane.setVisible(false);
            concessionairesWithMeter();
        
        }else{
            conPane.setVisible(false);
        }
    }//GEN-LAST:event_mainConcessionairesBtnActionPerformed

    private void mainUserBtnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainUserBtnTopActionPerformed
        if(userPane.isVisible()  != true){
            payPane.setVisible(false);
            conPane.setVisible(false);
            billPane.setVisible(false);
            userPane.setVisible(true);
        }else{
            userPane.setVisible(false);
        }
    }//GEN-LAST:event_mainUserBtnTopActionPerformed

    private void mainPaymentBtnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainPaymentBtnTopActionPerformed
        if(payPane.isVisible()  != true){
            payPane.setVisible(true);
            conPane.setVisible(false);
            billPane.setVisible(false);
            userPane.setVisible(false);
            showBilledConcessionaires();
            int ORNo = cc.getORNumber();
            if(ORNo < 10){
                paymentORNOLabel.setText("0000"+ORNo);
            }else if(ORNo < 100){
                paymentORNOLabel.setText("000"+ORNo);
            }else if(ORNo < 1000){
                paymentORNOLabel.setText("00"+ORNo);
            }else if(ORNo < 10000){
                paymentORNOLabel.setText("0"+ORNo);
            }else{
                paymentORNOLabel.setText(""+ORNo);
            }
           DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	   //get current date time with Date()
	   Date date = new Date();
           paymentDate.setText(dateFormat.format(date));
	   //System.out.println(dateFormat.format(date));
            
        }else{
            payPane.setVisible(false);
        }
    }//GEN-LAST:event_mainPaymentBtnTopActionPerformed

    private void mainBillingBtnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainBillingBtnTopActionPerformed
        if(billPane.isVisible() != true){
            payPane.setVisible(false);
            conPane.setVisible(false);
            userPane.setVisible(false);
            billPane.setVisible(true);
            showConcessionairesDetails();
            int b = cc.getBillingID();
            if(b < 10){
                billingBillNo.setText("00000"+b);
            }else if(b < 100){
                billingBillNo.setText("0000"+b);
            }else if(b < 1000){
                billingBillNo.setText("000"+b);
            }else if(b < 10000){
                billingBillNo.setText("00"+b);
            }else if(b < 100000){
                billingBillNo.setText("0"+b);
            }else{
                billingBillNo.setText(""+b);
            }
            billingReadingID.setText(cc.getReadingID()+"");
        }else{
            billPane.setVisible(false);
        }
    }//GEN-LAST:event_mainBillingBtnTopActionPerformed

    private void mainLockBtnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainLockBtnTopActionPerformed
        Lock l = new Lock(this,true);
        l.setVisible(true);
    }//GEN-LAST:event_mainLockBtnTopActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        this.dispose();
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ImageIcon img = new ImageIcon(System.getProperty("user.dir")+"\\LWDP\\small.png");
        this.setIconImage(img.getImage());
        //GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        //GraphicsDevice device = env.getScreenDevices()[0];
        //device.setFullScreenWindow(this);
        
    }//GEN-LAST:event_formWindowOpened

    private void payPaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payPaneMouseMoved
        //xyAxis.setText("("+evt.getX()+","+evt.getY()+")");
    }//GEN-LAST:event_payPaneMouseMoved

    private void paymentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentTableMouseClicked
        if(paymentTable.isRowSelected(paymentTable.getSelectedRow()) == true){
            paymentAcnField.setText((String) paymentTable.getModel().getValueAt(paymentTable.getSelectedRow(), 0));
            paymentConcessionaireField.setText((String) paymentTable.getModel().getValueAt(paymentTable.getSelectedRow(), 1));
            paymentAddressField.setText((String) paymentTable.getModel().getValueAt(paymentTable.getSelectedRow(), 2));
            paymentMeterNOLabelField.setText((String) paymentTable.getModel().getValueAt(paymentTable.getSelectedRow(), 6));
            ConcessionairesbilledPayment(paymentMeterNOLabelField.getText());
            paymentCurrentTable.setValueAt("0",3,1);
            paymentCurrentTable.setValueAt("0",4,1);
            paymentCurrentTable.setValueAt("0",5,1);
            paymentCurrentTable.setValueAt("0",6,1);
            paymentCurrentTable.setValueAt("0",7,1);
            double sTc = Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(0, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(1, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(2, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(3, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(4, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(5, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(6, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(7, 1));
            
            //Current Sub total
            paymentCurrentSubTotal.setText(sTc+"");
            Double Total = Double.parseDouble(paymentCurrentSubTotal.getText()) + Double.parseDouble(paymentPreviousSubTotal.getText()) ;
            paymentTotalLabel.setText(Total+"");
        }
    }//GEN-LAST:event_paymentTableMouseClicked

    private void paymentCurrentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentCurrentTableMouseClicked
        if(paymentCurrentTable.isRowSelected(3)== true){
            String insFee = JOptionPane.showInputDialog(
                                new JFrame(), 
                                "Installation Fee",0
                            );
            if(insFee == null){
                paymentCurrentTable.setValueAt("0", 3, 1);
            }else{
                paymentCurrentTable.setValueAt(insFee, 3, 1);
            }
        }else if(paymentCurrentTable.isRowSelected(4)== true){
            String insFee = JOptionPane.showInputDialog(
                                new JFrame(), 
                                "Materials",0
                            );
            if(insFee == null){
                paymentCurrentTable.setValueAt("0", 4, 1);
            }else{
                paymentCurrentTable.setValueAt(insFee, 4, 1);
            }
        }else if(paymentCurrentTable.isRowSelected(5)== true){
            String insFee = JOptionPane.showInputDialog(
                                new JFrame(), 
                                "Reconnection Fee",0
                            );
            if(insFee == null){
                paymentCurrentTable.setValueAt("0", 5, 1);
            }else{
                paymentCurrentTable.setValueAt(insFee, 5, 1);
            }
        }else if(paymentCurrentTable.isRowSelected(6)== true){
            String insFee = JOptionPane.showInputDialog(
                                new JFrame(), 
                                "Service Fee",0
                            );
            if(insFee == null){
                paymentCurrentTable.setValueAt("0", 6, 1);
            }else{
                paymentCurrentTable.setValueAt(insFee, 6, 1);
            }
        }else if(paymentCurrentTable.isRowSelected(7)== true){
            String insFee = JOptionPane.showInputDialog(
                                new JFrame(), 
                                "Transfer Fee", 
                                JOptionPane.WARNING_MESSAGE
                            );
            if(insFee == null){
                paymentCurrentTable.setValueAt("0", 7, 1);
            }else{
                paymentCurrentTable.setValueAt(insFee, 7, 1);
            }
        }else{
            
        }
            double sTc = Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(0, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(1, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(2, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(3, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(4, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(5, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(6, 1)) + Double.parseDouble((String) paymentCurrentTable.getModel().getValueAt(7, 1));
            
            //Current Sub total
            paymentCurrentSubTotal.setText(sTc+"");
            
            Double Total = Double.parseDouble(paymentCurrentSubTotal.getText()) + Double.parseDouble(paymentPreviousSubTotal.getText()) ;
            paymentTotalLabel.setText(Total+"");
    }//GEN-LAST:event_paymentCurrentTableMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        if(!paymentCashField.getText().equals("") && Double.parseDouble(paymentTotalLabel.getText()) <= Double.parseDouble(paymentCashField.getText()) ){           
            cc.savePayments(paymentORNOLabel.getText(),paymentBillNoLabel.getText(),statusBarUID.getText(),paymentCurrentTable.getModel().getValueAt(3, 1).toString(),paymentCurrentTable.getModel().getValueAt(4, 1).toString(),paymentCurrentTable.getModel().getValueAt(5, 1).toString(),paymentCurrentTable.getModel().getValueAt(6, 1).toString(),paymentCurrentTable.getModel().getValueAt(7, 1).toString(),paymentAcnField.getText(),paymentDate.getText());
            JOptionPane.showMessageDialog(new JFrame(),String.format("Change: P%.2f",(Double.parseDouble(paymentCashField.getText())-Double.parseDouble(paymentTotalLabel.getText()))),"SUCCESS",JOptionPane.INFORMATION_MESSAGE);
            
            paymentCashField.setText("0");
            showBilledConcessionaires();
            //
            int ORNo = cc.getORNumber();
            if(ORNo < 10){
                paymentORNOLabel.setText("0000"+ORNo);
            }else if(ORNo < 100){
                paymentORNOLabel.setText("000"+ORNo);
            }else if(ORNo < 1000){
                paymentORNOLabel.setText("00"+ORNo);
            }else if(ORNo < 10000){
                paymentORNOLabel.setText("0"+ORNo);
            }else{
                paymentORNOLabel.setText(""+ORNo);
            }
        }else{
            JOptionPane.showMessageDialog(new JFrame(),"Invalid Input.","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        printPreview p = new printPreview(this,true);
        Double t  = Double.parseDouble(billingMeteredSalesField.getText()) + Double.parseDouble(billingPenaltyField.getText()) + Double.parseDouble(billingMeterMaintenanceChargeField.getText());
        Double s = Double.parseDouble(billingPrevWS.getText()) + Double.parseDouble(billingPrevPenalty.getText()) + Double.parseDouble(billingPrevMeterMentenance.getText());
        Double total = t + s;
        p.setValuesToPrint(billingAccountNoField.getText(),billingConcessionairesField.getText(),billingClassificationLabel.getText(),billingMeterNoLabel.getText(),billingAddressField.getText(),billingZoneLabel.getText(),billingFromLabel.getText(),billingToLabel.getText(),"00-00-00",billingPresentField.getText(),billingPrevField.getText(),billingCuField.getText(),billingMeteredSalesField.getText(),billingPenaltyField.getText(),billingMeterMaintenanceChargeField.getText(),t+"",billingPrevFrom.getText(),billingPrevTo.getText(),billingPrevPresent.getText(),billingPrevPrevious.getText(),billingPrevCumc.getText(),billingPrevWS.getText(),billingPrevPenalty.getText(),billingPrevMeterMentenance.getText(),s+"",total+"",billingBillNo.getText(),statusBarName.getText());
        p.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void topBarZoneItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_topBarZoneItemStateChanged
        concessionairesWithMeter();
    }//GEN-LAST:event_topBarZoneItemStateChanged

    private void topBarClassificationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_topBarClassificationItemStateChanged
        concessionairesWithMeter();
    }//GEN-LAST:event_topBarClassificationItemStateChanged

    private void topBarSizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_topBarSizeItemStateChanged
        concessionairesWithMeter();
    }//GEN-LAST:event_topBarSizeItemStateChanged

    private void topBarConnectionStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_topBarConnectionStatusItemStateChanged
        concessionairesWithMeter();
    }//GEN-LAST:event_topBarConnectionStatusItemStateChanged

    private void topBarBookNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_topBarBookNoFocusLost
        if(topBarBookNo.getText().equals("")){
            topBarBookNo.setText("0");
        }
    }//GEN-LAST:event_topBarBookNoFocusLost

    private void billingConcessionairesTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_billingConcessionairesTableKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            displayConcessionairesDetailsToField();
        }else if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            displayConcessionairesDetailsToField();
        }
    }//GEN-LAST:event_billingConcessionairesTableKeyPressed

    private void billingConcessionairesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billingConcessionairesTableMouseClicked
        displayConcessionairesDetailsToField();
    }//GEN-LAST:event_billingConcessionairesTableMouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
       try {
         //Set your page url in this string. For eg, I m using URL for Google Search engine
         String url = "http://www.facebook.com";
         java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        }
       catch (java.io.IOException e) {
           System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
         //Set your page url in this string. For eg, I m using URL for Google Search engine
         String url = "http://lwd.lupon.gov.ph/";
         java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        }
        catch (java.io.IOException e) {
           System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new about(this,true).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    protected void setOtherPayment(Double ins,Double materials,Double reconfee,Double servFee,Double transFee){
        this.paymentCurrentTable.setValueAt(ins, 3, 1);
        this.paymentCurrentTable.setValueAt(materials, 4, 1);
        this.paymentCurrentTable.setValueAt(reconfee, 5, 1);
        this.paymentCurrentTable.setValueAt(servFee, 6, 1);
        this.paymentCurrentTable.setValueAt(transFee, 7, 1);
    }
    
    private void ConcessionairesbilledPayment(String mn){
        mySQLconnect mc = new mySQLconnect();

        
        String sql = "SELECT Extract(Year FROM r.to) as 'Year',Extract(Month FROM r.to) as 'Month',r.present as 'Present',r.previous as 'Previous',r.cubicMeterConsumed as 'Cu. m Consumed',b.meterMaintenance as 'Meter Maintenance Charge',r.meteredSales as 'Water Sales',r.penalty as 'Penalty', b.ID as 'Billing ID' FROM `concessionaires_tbl` c,`meter_tbl` m,`reading_tbl` r,`billing_tbl` b WHERE c.acn = m.acn AND m.meterNum = r.meterNum AND r.ID = b.readingID AND m.meterNum = '"+mn+"'";
        try {
            Statement statement = mc.connect().createStatement();
            ResultSet rs = statement.executeQuery(sql);
            String month[] = {"","January","February","March","April","May","June","July","August","September","October","November","December"};
           
                // create an array of objects to set the row data
            //final Object[] rows = new Object[8];            
            //store row data
            while(rs.next())
            {        
                //paymentCurrentTable.setValueAt(rs.getString("Year"),0,1);
                TitledBorder title = BorderFactory.createTitledBorder("Year "+rs.getString("Year"));
                paymentCurrentPanel.setBorder(title);
                paymentCurrentMonth.setText(month[Integer.parseInt(rs.getString("Month"))]);
                paymentCurrentPresent.setText(rs.getString("Present"));
                paymentCurrentPrevious.setText(rs.getString("Previous"));
                paymentCurrentCubic.setText(rs.getString("Cu. m Consumed"));
                paymentCurrentTable.setValueAt(rs.getString("Meter Maintenance Charge"),0,1);
                paymentCurrentTable.setValueAt(rs.getString("Water Sales"),1,1);
                paymentCurrentTable.setValueAt(rs.getString("Penalty"),2,1);
                paymentBillNoLabel.setText(rs.getString("Billing ID"));
            }
           
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
        } finally {
            mc.disconnect();
        }
    }
    
    private void clearConcessionairesTab1Field(){
        mdField.setText("");
        gdField.setText("");
        nameField.setText("");
    }
    
        
    
    private void setConcessionairesToEdit(String acn,String concessionaire,String guaranteeDeposit,String meterDeposit,String mn,String address,String cStatus){
        editAccountNoLabel.setText(acn);
        editConcessionaireField.setText(concessionaire);
        editGuaranteeField.setText(guaranteeDeposit);
        editMeterField.setText(meterDeposit);
        editMeterNoField.setText(mn);
        editAddressField.setText(address);
        if(cStatus.equals("0")){
            this.cStatus = "0";
            editDisconnectedRadio.setSelected(false);
            editConnectedRadio.setSelected(false);
            editConnectedRadio.setText("Connect");
            editDisconnectedRadio.setText("Disconnect");
        }else if(cStatus.equals("1")){
            editConnectedRadio.setSelected(true);
            editDisconnectedRadio.setSelected(false);
            editConnectedRadio.setText("Connected");
        }else{
            editDisconnectedRadio.setSelected(true);
            editConnectedRadio.setSelected(false);
            editDisconnectedRadio.setText("Disconnected");
        }
    }
    
    private void setConcessionaireReadingDetails(){
        billingAccountNoField.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),0).toString());
        billingConcessionairesField.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),1).toString());
        billingAddressField.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),2).toString());
        billingMeterNoLabel.setText(billingConcessionairesTable.getModel().getValueAt(billingConcessionairesTable.getSelectedRow(),6).toString());
        setReading(billingMeterNoLabel.getText());
        if(billingAccountNoField.getText().length() == 10){
            billingClassificationLabel.setText(cc.getClassification(billingAccountNoField.getText().charAt(4)));
            billingZoneLabel.setText(billingAccountNoField.getText().charAt(0)+""+billingAccountNoField.getText().charAt(1)+"");
            billingSizeLabel.setText(cc.getMeterSize(billingAccountNoField.getText().charAt(5)));
        }else{
            billingSizeLabel.setText(cc.getMeterSize(billingAccountNoField.getText().charAt(6)));
            billingClassificationLabel.setText(cc.getClassification(billingAccountNoField.getText().charAt(5)));
            billingZoneLabel.setText(billingAccountNoField.getText().charAt(0)+""+billingAccountNoField.getText().charAt(1)+"");
        }
    }
    

    
    
    protected void displayReading(boolean f){
        billPane.setVisible(f);
    }

    public void clearMeterTextFields(){
        meterField.setText("");
        addressField.setText("");
        connectionStatusField.setSelected(false);
    }
    
    private void clearAll(){
        billingAccountNoField.setText("");
        billingAddressField.setText("");
        billingClassificationLabel.setText("NONE");
        billingConcessionairesField.setText("");
        billingCuField.setText("0");
        billingFromLabel.setText("00/00/00");
        billingMeterNoLabel.setText("NONE");
        billingMeteredSalesField.setText("0");
        billingPenaltyField.setText("0");
        billingPresentField.setText("0");
        billingPrevField.setText("0");
        billingSizeLabel.setText("NONE");
        billingZoneLabel.setText("NONE");
    }
    
    //This will Set The Unique Account No. of Concessionaires
    private void setAccountNo(){  
        String zone = zoneBox.getSelectedItem().toString();
        String classifi = classificationBox.getSelectedItem().toString();
        String size = sizeBox.getSelectedItem().toString();
        String cNum = cc.getConcessionairesNumber(zone,cc.getClassificationValue(classifi),cc.getMeterSizeValue(size));
        accountNoJLabel.setText(zone+"1-"+cc.getClassificationValue(classifi)+""+cc.getMeterSizeValue(size)+"-"+cNum);  
    }
    //End of Account No. Set-up
    
    //set User Id and First Name
    protected void setUserDetails(String ID,String fn,String mn,String ln,String uname,String pw,int status,String task){
        UFuserID.setText(ID);
        UFname.setText(fn+" "+mn+" "+ln);
        UFusername.setText(uname);
        if(pw.length() != 0){
           UFpassword.setText("***********"); 
        }
        
        if(status == 1){
            UFstatus.setText("Active");
        }else{
            UFstatus.setText("Not Active");
        }
        UFtask.setText(task);
        statusBarUID.setText(ID);
        statusBarName.setText(fn);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainForm().setVisible(true);
                
            }
        });
    }

   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ConsumersDepositPanel;
    private javax.swing.JLabel PositionTitle;
    private javax.swing.JLabel UFname;
    private javax.swing.JLabel UFpassword;
    private javax.swing.JLabel UFstatus;
    private javax.swing.JLabel UFtask;
    private javax.swing.JLabel UFuserID;
    private javax.swing.JLabel UFusername;
    private javax.swing.JLabel accountNoJLabel;
    private javax.swing.JLabel acnField;
    private javax.swing.JTextField addressField;
    private javax.swing.JInternalFrame billPane;
    private javax.swing.JTextField billingAccountNoField;
    private javax.swing.JTextField billingAddressField;
    private javax.swing.JLabel billingBillNo;
    private javax.swing.JLabel billingClassificationLabel;
    private javax.swing.JTextField billingConcessionairesField;
    private javax.swing.JTable billingConcessionairesTable;
    private javax.swing.JTable billingConcessionairesTable1;
    private javax.swing.JTextField billingCuField;
    private javax.swing.JLabel billingFromLabel;
    private javax.swing.JTextField billingMeterMaintenanceChargeField;
    private javax.swing.JLabel billingMeterNoLabel;
    private javax.swing.JTextField billingMeteredSalesField;
    private javax.swing.JTextField billingPenaltyField;
    private javax.swing.JTextField billingPresentField;
    private javax.swing.JLabel billingPrevCumc;
    private javax.swing.JTextField billingPrevField;
    private javax.swing.JLabel billingPrevFrom;
    private javax.swing.JLabel billingPrevMeterMentenance;
    private javax.swing.JLabel billingPrevPenalty;
    private javax.swing.JLabel billingPrevPresent;
    private javax.swing.JLabel billingPrevPrevious;
    private javax.swing.JLabel billingPrevTo;
    private javax.swing.JLabel billingPrevWS;
    private javax.swing.JButton billingReadingClear;
    private javax.swing.JLabel billingReadingID;
    private javax.swing.JButton billingSaveBtn;
    private javax.swing.JButton billingSearchBtn;
    private javax.swing.JLabel billingSizeLabel;
    private javax.swing.JLabel billingToLabel;
    private javax.swing.JLabel billingZoneLabel;
    private javax.swing.JPanel billing_left_pane;
    private javax.swing.JPanel billing_right_pane;
    private javax.swing.JComboBox<String> classificationBox;
    private javax.swing.JInternalFrame conPane;
    private javax.swing.JTable concessionairesJTable;
    private javax.swing.JCheckBox connectionStatusField;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel editAccountNoLabel;
    private javax.swing.JTextField editAddressField;
    private javax.swing.JButton editConcessionaireBtn;
    private javax.swing.JTextField editConcessionaireField;
    private javax.swing.JRadioButton editConnectedRadio;
    private javax.swing.JRadioButton editDisconnectedRadio;
    private javax.swing.JTextField editGuaranteeField;
    private javax.swing.JButton editMeterBtn;
    private javax.swing.JTextField editMeterField;
    private javax.swing.JTextField editMeterNoField;
    private javax.swing.JTextField gdField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator15;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField109;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JButton mainBillingBtnTop;
    private javax.swing.JPanel mainBillingPane;
    private javax.swing.JScrollPane mainBilllingScrollPane;
    private javax.swing.JButton mainConcessionairesBtn;
    private javax.swing.JButton mainLockBtnTop;
    private javax.swing.JButton mainPaymentBtnTop;
    private javax.swing.JButton mainUserBtnTop;
    private javax.swing.JTextField mdField;
    private javax.swing.JMenuItem menuPrint;
    private javax.swing.JMenuItem menuPrintPreview;
    private javax.swing.JTextField meterField;
    private javax.swing.JButton meterSaveBtn;
    private javax.swing.JTextField nameField;
    private javax.swing.JInternalFrame payPane;
    private javax.swing.JTextField paymentAcnField;
    private javax.swing.JTextField paymentAddressField;
    private javax.swing.JLabel paymentBillNoLabel;
    private javax.swing.JTextField paymentCashField;
    private javax.swing.JTextField paymentConcessionaireField;
    private javax.swing.JLabel paymentCurrentCubic;
    private javax.swing.JLabel paymentCurrentMonth;
    private javax.swing.JPanel paymentCurrentPanel;
    private javax.swing.JLabel paymentCurrentPresent;
    private javax.swing.JLabel paymentCurrentPrevious;
    private javax.swing.JLabel paymentCurrentSubTotal;
    private javax.swing.JTable paymentCurrentTable;
    private javax.swing.JTable paymentCurrentTable1;
    private javax.swing.JLabel paymentDate;
    private javax.swing.JLabel paymentMeterNOLabelField;
    private javax.swing.JLabel paymentORNOLabel;
    private javax.swing.JPanel paymentPreviousPanel;
    private javax.swing.JLabel paymentPreviousSubTotal;
    private javax.swing.JTable paymentTable;
    private javax.swing.JLabel paymentTotalLabel;
    private javax.swing.JPanel payment_main_panel;
    private javax.swing.JComboBox<String> sizeBox;
    private javax.swing.JLabel statusBarName;
    protected javax.swing.JLabel statusBarUID;
    private javax.swing.JTextField topBarBookNo;
    private javax.swing.JComboBox<String> topBarClassification;
    private javax.swing.JComboBox<String> topBarConnectionStatus;
    private javax.swing.JTextField topBarSearchField;
    private javax.swing.JComboBox<String> topBarSize;
    private javax.swing.JComboBox<String> topBarZone;
    private javax.swing.JInternalFrame userPane;
    private javax.swing.JComboBox<String> zoneBox;
    // End of variables declaration//GEN-END:variables
    
}
